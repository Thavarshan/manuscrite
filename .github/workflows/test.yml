name: Test

on:
  push:
    branches:
      - main
      - development
      - feature/**
  pull_request:
    branches:
      - main
      - development
      - feature/**

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ['8.0']
        dependency-stability: [prefer-stable]

    name: PHP ${{ matrix.php-versions }} - ${{ matrix.dependency-stability }}

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '15.x'

    - name: Cache node_modules directory
      uses: actions/cache@v2
      id: node_modules-cache
      with:
        path: node_modules
        key: ${{ runner.OS }}-build-${{ hashFiles('**/package.json') }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install NPM packages
      if: steps.node_modules-cache.outputs.cache-hit != 'true'
      run: npm ci

    - name: Build frontend
      run: npm run development

    - name: Install PHP versions
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}

    - name: Get Composer Cache Directory 2
      id: composer-cache
      run: |
        echo "::set-output name=dir::$(composer config cache-files-dir)"
    - uses: actions/cache@v2
      id: actions-cache
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-

    - name: Cache PHP dependencies
      uses: actions/cache@v2
      id: vendor-cache
      with:
        path: vendor
        key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      if: steps.vendor-cache.outputs.cache-hit != 'true'
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Show dir
      run: pwd

    - name: PHP Version
      run: php --version

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      run: vendor/bin/phpunit --testdox
